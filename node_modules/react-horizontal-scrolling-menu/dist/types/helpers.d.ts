import React, { ReactChild, ReactFragment, ReactPortal } from 'react';
import type { Refs, Item, ItemOrElement, visibleElements, scrollToItemOptions, CustomScrollBehavior } from './types';
import { observerOptions } from './settings';
export declare const getNodesFromRefs: (refs: Refs) => HTMLElement[];
export declare function observerEntriesToItems(entries: IntersectionObserverEntry[], options: typeof observerOptions): Item[];
declare function scrollToItem<T>(item: ItemOrElement, behavior?: ScrollBehavior | CustomScrollBehavior<T>, inline?: ScrollLogicalPosition, block?: ScrollLogicalPosition, rest?: scrollToItemOptions, noPolyfill?: boolean): T | Promise<T> | void;
export { scrollToItem };
export declare const getItemElementById: (id: string | number) => Element | null;
export declare const getItemElementByIndex: (id: string | number) => Element | null;
export declare function getElementOrConstructor(Elem: React.FC | React.ReactNode): JSX.Element | null;
export declare const filterSeparators: (items: visibleElements) => visibleElements;
export declare const getItemId: (item: ReactChild | ReactFragment | ReactPortal) => string;
